# Generated by Django 4.2.7 on 2024-08-31 09:12

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BeautyPersonalCare',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '美妆个护表',
                'verbose_name_plural': '美妆个护表',
                'db_table': 'beauty_personal_care',
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '图书表',
                'verbose_name_plural': '图书表',
                'db_table': 'books',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '汽车表',
                'verbose_name_plural': '汽车表',
                'db_table': 'car',
            },
        ),
        migrations.CreateModel(
            name='Classify',
            fields=[
                ('create_user_id', models.CharField(blank=True, help_text='创建人ID', max_length=255, null=True, verbose_name='创建人ID')),
                ('user_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modify_user_id', models.CharField(blank=True, help_text='修改人ID', max_length=255, null=True, verbose_name='修改人ID')),
                ('user_modify_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('product_classify_id', models.UUIDField(default=uuid.uuid4, help_text='产品分类ID', primary_key=True, serialize=False, verbose_name='产品分类ID')),
                ('product_table', models.CharField(blank=True, help_text='产品表名', max_length=255, verbose_name='产品表名')),
                ('classify_name', models.CharField(blank=True, help_text='分类名称', max_length=255, verbose_name='分类名称')),
            ],
            options={
                'verbose_name': '分类表',
                'verbose_name_plural': '分类表',
                'db_table': 'classify',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.UUIDField(default=uuid.uuid4, help_text='评论ID', primary_key=True, serialize=False, verbose_name='评论ID')),
                ('upvote', models.BigIntegerField(blank=True, default=0, help_text='点赞', verbose_name='点赞')),
                ('trample', models.BigIntegerField(blank=True, default=0, help_text='踩', verbose_name='踩')),
                ('reply_id', models.CharField(blank=True, help_text='回复ID', max_length=255, null=True, verbose_name='回复ID')),
                ('product_classify_id', models.CharField(blank=True, help_text='产品分类ID', max_length=255, null=True, verbose_name='产品分类ID')),
                ('content', models.TextField(blank=True, help_text='内容', null=True, verbose_name='内容')),
            ],
            options={
                'verbose_name': '评论表',
                'verbose_name_plural': '评论表',
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '电脑表',
                'verbose_name_plural': '电脑表',
                'db_table': 'computer',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('create_user_id', models.CharField(blank=True, help_text='创建人ID', max_length=255, null=True, verbose_name='创建人ID')),
                ('user_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modify_user_id', models.CharField(blank=True, help_text='修改人ID', max_length=255, null=True, verbose_name='修改人ID')),
                ('user_modify_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('coupon_id', models.UUIDField(default=uuid.uuid4, help_text='优惠券ID', primary_key=True, serialize=False, verbose_name='优惠券ID')),
                ('coupon_name', models.CharField(blank=True, help_text='优惠券名称', max_length=255, verbose_name='优惠券名称')),
                ('coupon_discount', models.IntegerField(blank=True, default=0.0, help_text='优惠券折扣', verbose_name='优惠券折扣')),
                ('coupon_product_id', models.CharField(blank=True, help_text='折扣产品ID', max_length=255, null=True, verbose_name='折扣产品ID')),
                ('product_classify_id', models.CharField(blank=True, help_text='产品分类ID', max_length=255, null=True, verbose_name='产品分类ID')),
                ('coupon_shop_id', models.CharField(blank=True, help_text='折扣商店ID', max_length=255, null=True, verbose_name='折扣商店ID')),
                ('valid_time', models.DateTimeField(blank=True, help_text='有效时间', verbose_name='有效时间')),
                ('is_superposition', models.BooleanField(blank=True, default=False, help_text='是否能叠加', null=True, verbose_name='是否能叠加')),
                ('is_use', models.BooleanField(blank=True, default=False, help_text='是否使用', null=True, verbose_name='是否使用')),
                ('is_valid', models.BooleanField(blank=True, default=False, help_text='是否有效', null=True, verbose_name='是否有效')),
            ],
            options={
                'verbose_name': '优惠券表',
                'verbose_name_plural': '优惠券表',
                'db_table': 'coupon',
            },
        ),
        migrations.CreateModel(
            name='Foodstuff',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '食品表',
                'verbose_name_plural': '食品表',
                'db_table': 'foodstuff',
            },
        ),
        migrations.CreateModel(
            name='GiftFlowers',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '礼品鲜花表',
                'verbose_name_plural': '礼品鲜花表',
                'db_table': 'gift_flowers',
            },
        ),
        migrations.CreateModel(
            name='HealthCare',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '医疗保健',
                'verbose_name_plural': '医疗保健',
                'db_table': 'health_care',
            },
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '家居表',
                'verbose_name_plural': '家居表',
                'db_table': 'home',
            },
        ),
        migrations.CreateModel(
            name='HouseholdAppliances',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '家用电器表',
                'verbose_name_plural': '家用电器表',
                'db_table': 'household_appliances',
            },
        ),
        migrations.CreateModel(
            name='MaternalAndChild',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '母婴表',
                'verbose_name_plural': '母婴表',
                'db_table': 'maternal_and_child',
            },
        ),
        migrations.CreateModel(
            name='MenShoes',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '男鞋表',
                'verbose_name_plural': '男鞋表',
                'db_table': 'men_shoes',
            },
        ),
        migrations.CreateModel(
            name='MensWear',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '男装表',
                'verbose_name_plural': '男装表',
                'db_table': 'mens_wear',
            },
        ),
        migrations.CreateModel(
            name='MobilePhone',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '手机表',
                'verbose_name_plural': '手机表',
                'db_table': 'mobile_phone',
            },
        ),
        migrations.CreateModel(
            name='ProductCollect',
            fields=[
                ('product_collect_id', models.UUIDField(default=uuid.uuid4, help_text='产品收藏ID', primary_key=True, serialize=False, verbose_name='产品收藏ID')),
                ('shop_id', models.CharField(blank=True, help_text='店铺ID', max_length=255, verbose_name='店铺ID')),
                ('product_id', models.CharField(blank=True, help_text='产品ID', max_length=255, verbose_name='产品ID')),
                ('product_classify_id', models.CharField(blank=True, help_text='产品分类ID', max_length=255, verbose_name='产品分类ID')),
                ('price', models.BigIntegerField(blank=True, default=0.0, help_text='价格', verbose_name='价格')),
                ('product_name', models.CharField(blank=True, help_text='产品名称', max_length=255, verbose_name='产品名称')),
            ],
            options={
                'verbose_name': '产品收藏表',
                'verbose_name_plural': '产品收藏表',
                'db_table': 'product_collect',
            },
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('create_user_id', models.CharField(blank=True, help_text='创建人ID', max_length=255, null=True, verbose_name='创建人ID')),
                ('user_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modify_user_id', models.CharField(blank=True, help_text='修改人ID', max_length=255, null=True, verbose_name='修改人ID')),
                ('user_modify_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('product_order_id', models.UUIDField(default=uuid.uuid4, help_text='产品订单ID', primary_key=True, serialize=False, verbose_name='产品订单ID')),
                ('product_id', models.CharField(blank=True, help_text='产品ID', max_length=255, verbose_name='产品ID')),
                ('product_name', models.CharField(blank=True, help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('shop_id', models.CharField(blank=True, help_text='商店ID', max_length=255, verbose_name='商店ID')),
                ('price', models.BigIntegerField(blank=True, default=0.0, help_text='价格', verbose_name='价格')),
                ('product_classify_id', models.CharField(blank=True, help_text='产品分类ID', max_length=255, null=True, verbose_name='产品分类ID')),
                ('product_classify_name', models.CharField(blank=True, help_text='产品名称', max_length=64, null=True, verbose_name='产品分类名称')),
                ('product_describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
                ('non_payment', models.IntegerField(blank=True, choices=[(0, '其他状态'), (1, '未付款'), (2, '已付款')], default=0, help_text='待付款', null=True, verbose_name='待付款')),
                ('wait_for_receiving', models.IntegerField(blank=True, choices=[(0, '其他状态'), (1, '待收货'), (2, '已收货')], default=0, help_text='待收货', null=True, verbose_name='待收货')),
                ('after_sale', models.BooleanField(blank=True, default=False, help_text='售后', null=True, verbose_name='售后')),
                ('is_finish', models.BooleanField(blank=True, default=False, help_text='是否完成', null=True, verbose_name='是否完成')),
                ('is_cancel', models.BooleanField(blank=True, default=False, help_text='是否取消', null=True, verbose_name='是否取消')),
            ],
            options={
                'verbose_name': '产品订单表',
                'verbose_name_plural': '产品订单表',
                'db_table': 'product_order',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('create_user_id', models.CharField(blank=True, help_text='创建人ID', max_length=255, null=True, verbose_name='创建人ID')),
                ('user_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modify_user_id', models.CharField(blank=True, help_text='修改人ID', max_length=255, null=True, verbose_name='修改人ID')),
                ('user_modify_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='是否软删除', verbose_name='是否软删除')),
                ('shop_id', models.UUIDField(default=uuid.uuid4, help_text='店铺ID', primary_key=True, serialize=False, verbose_name='店铺ID')),
                ('shop_name', models.CharField(blank=True, help_text='店铺名称', max_length=64, verbose_name='店铺名称')),
                ('shop_info', models.TextField(blank=True, default='', help_text='店铺信息', verbose_name='店铺信息')),
                ('shopkeeper_phone', models.CharField(blank=True, help_text='店主电话号码', max_length=11, verbose_name='店主电话号码')),
                ('shopkeeper_name', models.CharField(blank=True, help_text='店主名字', max_length=64, verbose_name='店主名字')),
            ],
            options={
                'verbose_name': '店铺表',
                'verbose_name_plural': '店铺表',
                'db_table': 'shop',
            },
        ),
        migrations.CreateModel(
            name='ShoppingTrolley',
            fields=[
                ('shopping_trolley_id', models.UUIDField(default=uuid.uuid4, help_text='购物车ID', primary_key=True, serialize=False, verbose_name='购物车ID')),
                ('product_id', models.CharField(blank=True, help_text='产品ID', max_length=255, verbose_name='产品ID')),
                ('shop_id', models.CharField(blank=True, help_text='店铺ID', max_length=255, verbose_name='店铺ID')),
                ('product_name', models.CharField(blank=True, help_text='产品名称', max_length=64, verbose_name='产品名称')),
                ('price', models.BigIntegerField(blank=True, default=0.0, help_text='价格', verbose_name='价格')),
            ],
            options={
                'verbose_name': '购物车表',
                'verbose_name_plural': '购物车表',
                'db_table': 'shopping_trolley',
            },
        ),
        migrations.CreateModel(
            name='WomenShoes',
            fields=[
                ('name', models.CharField(help_text='产品名称', max_length=255, verbose_name='产品名称')),
                ('price', models.IntegerField(default=0.0, help_text='产品价格', verbose_name='产品价格')),
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='产品ID', primary_key=True, serialize=False, verbose_name='产品ID')),
                ('describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
            ],
            options={
                'verbose_name': '女鞋表',
                'verbose_name_plural': '女鞋表',
                'db_table': 'women_shoes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_user_id', models.CharField(blank=True, help_text='创建人ID', max_length=255, null=True, verbose_name='创建人ID')),
                ('user_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modify_user_id', models.CharField(blank=True, help_text='修改人ID', max_length=255, null=True, verbose_name='修改人ID')),
                ('user_modify_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='是否软删除', verbose_name='是否软删除')),
                ('user_id', models.BigAutoField(help_text='用户ID', primary_key=True, serialize=False, verbose_name='用户ID')),
                ('name', models.CharField(blank=True, help_text='姓名', max_length=64, verbose_name='姓名')),
                ('username', models.CharField(blank=True, db_index=True, help_text='账号', max_length=150, unique=True, verbose_name='账号')),
                ('password', models.CharField(blank=True, help_text='密码', max_length=255, verbose_name='密码')),
                ('icon', models.ImageField(blank=True, help_text='头像', null=True, upload_to='static/icon/', verbose_name='头像')),
                ('gender', models.IntegerField(blank=True, choices=[(0, '未知'), (1, '男'), (2, '女')], default=0, help_text='性别', null=True, verbose_name='性别')),
                ('date_of_birth', models.DateField(blank=True, help_text='生日', null=True, verbose_name='生日')),
                ('phone_number', models.CharField(blank=True, db_index=True, help_text='电话号码', max_length=11, unique=True, verbose_name='电话号码')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('shop_id', models.ForeignKey(blank=True, help_text='店铺ID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Shop.shop', verbose_name='店铺ID')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
                'db_table': 'user',
                'ordering': ('user_create_datetime',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserToShoppingTrolley',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopping_trolley_id', models.ForeignKey(blank=True, help_text='购物车ID', on_delete=django.db.models.deletion.CASCADE, to='Shop.shoppingtrolley', verbose_name='购物车ID')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '用户2购物车表',
                'verbose_name_plural': '用户2购物车表',
                'db_table': 'user_to_shopping_trolley',
            },
        ),
        migrations.CreateModel(
            name='UserToShopCollect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_id', models.ForeignKey(help_text='店铺ID', on_delete=django.db.models.deletion.CASCADE, to='Shop.shop', verbose_name='店铺ID')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '用户2店铺收藏表',
                'verbose_name_plural': '用户2店铺收藏表',
                'db_table': 'user_to_shop_collect',
            },
        ),
        migrations.CreateModel(
            name='UserToProductOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_order_id', models.ForeignKey(blank=True, help_text='产品订单ID', on_delete=django.db.models.deletion.CASCADE, to='Shop.productorder', verbose_name='产品订单ID')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '用户2产品订单表',
                'verbose_name_plural': '用户2产品订单表',
                'db_table': 'user_to_product_order',
            },
        ),
        migrations.CreateModel(
            name='UserToProductCollect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_collect_id', models.ForeignKey(blank=True, help_text='产品收藏ID', on_delete=django.db.models.deletion.CASCADE, to='Shop.productcollect', verbose_name='产品收藏ID')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '用户2产品收藏表',
                'verbose_name_plural': '用户2产品收藏表',
                'db_table': 'user_to_product_collect',
            },
        ),
        migrations.CreateModel(
            name='UserToCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_id', models.ForeignKey(blank=True, help_text='优惠券ID', on_delete=django.db.models.deletion.CASCADE, to='Shop.coupon', verbose_name='优惠券ID')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '用户2优惠券表',
                'verbose_name_plural': '用户2优惠券表',
                'db_table': 'user_to_coupon',
            },
        ),
        migrations.CreateModel(
            name='UserToComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_id', models.ForeignKey(blank=True, help_text='评论ID', on_delete=django.db.models.deletion.CASCADE, to='Shop.comment', verbose_name='评论ID')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '用户2评论表',
                'verbose_name_plural': '用户2评论表',
                'db_table': 'user_to_comment',
            },
        ),
        migrations.CreateModel(
            name='ShopProductClassify',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, help_text='产品ID', max_length=255, verbose_name='产品ID')),
                ('product_name', models.CharField(blank=True, help_text='产品名称', max_length=64, verbose_name='产品名称')),
                ('price', models.BigIntegerField(blank=True, default=0.0, help_text='价格', verbose_name='价格')),
                ('product_classify', models.CharField(blank=True, help_text='产品分类', max_length=255, verbose_name='产品分类')),
                ('shop_product_classify', models.CharField(blank=True, help_text='店铺产品分类', max_length=255, verbose_name='店铺产品分类')),
                ('product_describe', models.TextField(blank=True, help_text='产品描述', null=True, verbose_name='产品描述')),
                ('shop_id', models.ForeignKey(blank=True, help_text='店铺ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='店铺ID')),
            ],
            options={
                'verbose_name': '店铺产品分类表',
                'verbose_name_plural': '店铺产品分类表',
                'db_table': 'shop_product_classify',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, help_text='用户昵称', max_length=64, verbose_name='用户昵称')),
                ('user_id', models.CharField(blank=True, help_text='用户ID', max_length=255, verbose_name='用户ID')),
                ('reply_content', models.TextField(blank=True, help_text='内容', null=True, verbose_name='内容')),
                ('replied_nickname', models.CharField(blank=True, help_text='被回复用户昵称', max_length=64, verbose_name='被回复用户昵称')),
                ('comment_id', models.ForeignKey(blank=True, help_text='评论ID', on_delete=django.db.models.deletion.CASCADE, to='Shop.comment', verbose_name='评论ID')),
            ],
            options={
                'verbose_name': '回复表',
                'verbose_name_plural': '回复表',
                'db_table': 'reply',
            },
        ),
        migrations.CreateModel(
            name='ReceivingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, help_text='地址', max_length=255, verbose_name='地址')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '收获地址表',
                'verbose_name_plural': '收获地址表',
                'db_table': 'receiving_address',
            },
        ),
        migrations.CreateModel(
            name='BrowsingHistory',
            fields=[
                ('browsing_history_id', models.UUIDField(default=uuid.uuid4, help_text='浏览记录ID', primary_key=True, serialize=False, verbose_name='浏览记录ID')),
                ('product_id', models.CharField(blank=True, help_text='产品ID', max_length=255, verbose_name='产品ID')),
                ('shop_id', models.CharField(blank=True, help_text='店铺ID', max_length=255, verbose_name='店铺ID')),
                ('price', models.BigIntegerField(blank=True, default=0.0, help_text='价格', verbose_name='价格')),
                ('product_name', models.CharField(blank=True, help_text='产品名称', max_length=64, verbose_name='产品名称')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '浏览记录表',
                'verbose_name_plural': '浏览记录表',
                'db_table': 'browsing_history',
            },
        ),
        migrations.CreateModel(
            name='BankCardID',
            fields=[
                ('create_user_id', models.CharField(blank=True, help_text='创建人ID', max_length=255, null=True, verbose_name='创建人ID')),
                ('user_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modify_user_id', models.CharField(blank=True, help_text='修改人ID', max_length=255, null=True, verbose_name='修改人ID')),
                ('user_modify_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='是否软删除', verbose_name='是否软删除')),
                ('bank_card_id', models.UUIDField(default=uuid.uuid4, help_text='银行卡ID', primary_key=True, serialize=False, verbose_name='银行卡ID')),
                ('bank_card', models.CharField(blank=True, help_text='银行卡号', max_length=32, verbose_name='银行卡号')),
                ('bank_name', models.CharField(blank=True, help_text='银行卡名', max_length=64, verbose_name='银行卡名')),
                ('user_id', models.ForeignKey(blank=True, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '银行卡表',
                'verbose_name_plural': '银行卡表',
                'db_table': 'bank_card_id',
            },
        ),
    ]
